package paneles;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Shape;
import java.awt.Toolkit;
import java.awt.geom.Rectangle2D;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import phms.Connect;


public class UserAnalysis extends javax.swing.JPanel {

    public String dbname=null,unm=null; 
    public Statement s;
    public Connect c=new Connect();
    DefaultTableModel model = new DefaultTableModel();
    String endstr="";

    public UserAnalysis(String unm) {  
        this.unm=unm; 
        dbname=unm.toLowerCase().replaceAll(" ","");        
        s=c.connection(dbname);       
        initComponents();

        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/"+dbname+"?useTimezone=true&serverTimezone=IST","root","");                      
            DatabaseMetaData meta=(DatabaseMetaData) con.getMetaData();
            ResultSet rs=meta.getTables(null,null,"%", new String []{"TABLE"});            
            while(rs.next())
            {
                if(rs.getString(1).equals(dbname))
                {
                    String str=rs.getString("TABLE_NAME");
                    Combopname.addItem(str);
                }
            }                        
        }
        catch(ClassNotFoundException | SQLException e2){System.out.println("Exception aayi h "+e2.getMessage());}            
        
        mytable.getTableHeader().setBackground(new Color(209,246,193));
        mytable.getTableHeader().setForeground(new Color(0x40515E));
        mytable.getTableHeader().setFont(new Font("Calbri Light",Font.BOLD,13));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Btnsave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mytable = new javax.swing.JTable();
        Btngraph = new javax.swing.JButton();
        ycombo = new javax.swing.JComboBox<>();
        xcombo = new javax.swing.JComboBox<>();
        Lpname = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Lpmonth = new javax.swing.JLabel();
        Combomonth = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Btnshow = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Combopname = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(233, 239, 186));

        Btnsave.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        Btnsave.setText("Save");
        Btnsave.setOpaque(false);
        Btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnsaveActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        mytable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mytable.setGridColor(new java.awt.Color(204, 204, 204));
        mytable.setRowHeight(20);
        mytable.setRowMargin(3);
        mytable.setSelectionBackground(new java.awt.Color(233, 239, 186));
        mytable.setSelectionForeground(new java.awt.Color(54, 98, 43));
        jScrollPane1.setViewportView(mytable);

        Btngraph.setBackground(new java.awt.Color(233, 239, 186));
        Btngraph.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        Btngraph.setText("Graph");
        Btngraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtngraphActionPerformed(evt);
            }
        });

        ycombo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        ycombo.setBorder(null);
        ycombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ycomboActionPerformed(evt);
            }
        });

        xcombo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        xcombo.setBorder(null);
        xcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xcomboActionPerformed(evt);
            }
        });

        Lpname.setBackground(new java.awt.Color(249, 248, 235));
        Lpname.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        Lpname.setForeground(new java.awt.Color(64, 81, 94));
        Lpname.setText("Plant Name :");

        jLabel5.setBackground(new java.awt.Color(249, 248, 235));
        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 0, 30)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(64, 81, 94));
        jLabel5.setText("Data Analysis");

        Lpmonth.setBackground(new java.awt.Color(249, 248, 235));
        Lpmonth.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        Lpmonth.setForeground(new java.awt.Color(64, 81, 94));
        Lpmonth.setText("Month :");

        Combomonth.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        Combomonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        Combomonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CombomonthActionPerformed(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(249, 248, 235));
        jLabel7.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(64, 81, 94));
        jLabel7.setText("X Axis :");

        jLabel8.setBackground(new java.awt.Color(249, 248, 235));
        jLabel8.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(64, 81, 94));
        jLabel8.setText("Y Axis :");

        Btnshow.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        Btnshow.setText("Show");
        Btnshow.setOpaque(false);
        Btnshow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnshowActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/analysisleft.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/analysisright.png"))); // NOI18N

        Combopname.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        Combopname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CombopnameItemStateChanged(evt);
            }
        });
        Combopname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CombopnameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Lpmonth)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Combomonth, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Lpname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Combopname, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 303, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel8)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ycombo, 0, 109, Short.MAX_VALUE)
                    .addComponent(xcombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45))
            .addGroup(layout.createSequentialGroup()
                .addGap(324, 324, 324)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(Btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Btnshow, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addComponent(Btngraph, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lpname)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ycombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Combopname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lpmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Combomonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(xcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 86, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Btngraph, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Btnshow)
                            .addComponent(Btnsave))
                        .addGap(17, 17, 17)))
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtngraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtngraphActionPerformed
    
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/"+dbname+"?useTimezone=true&serverTimezone=IST","root","");                      
            JDBCCategoryDataset dataset=new JDBCCategoryDataset(con,"Select "+xcombo.getSelectedItem().toString()+","+ycombo.getSelectedItem().toString()+" from "+Combopname.getSelectedItem().toString()+" where Date like '%-"+endstr+"-%'");

            JFreeChart chart=ChartFactory.createLineChart("Graph", xcombo.getSelectedItem().toString(), ycombo.getSelectedItem().toString(), dataset, PlotOrientation.VERTICAL, false,true,true);
            chart.setBackgroundPaint(new Color(0xE9EFBA));
            chart.getPlot().setBackgroundPaint(new Color(255,255,255));//0xf7f7f7
            
            CategoryPlot plot=(CategoryPlot) chart.getPlot();
            LineAndShapeRenderer r1=(LineAndShapeRenderer) plot.getRenderer();
            r1.setSeriesPaint(0, new Color(0xfb7f64));
           
            Shape shape=new Rectangle2D.Double(-2,-2,3.5,3.5);
            r1.setSeriesShapesVisible(0, true);
            r1.setSeriesShape(0, shape);
            
            ChartFrame frame=new ChartFrame("Analysis Graph",chart);       
          
            Dimension screenSize,frameSize;
            int x,y;
            screenSize=Toolkit.getDefaultToolkit().getScreenSize();
            frameSize=this.getSize();
            x=(screenSize.width-frameSize.width)/2;
            y=(screenSize.height-frameSize.height)/2;
            frame.setLocation(x+230, y+130);
            
            frame.setVisible(true);
            frame.setSize(650,400);
        }
        catch(Exception e2){System.out.println("Exception aayi h "+e2.getMessage());}            

    }//GEN-LAST:event_BtngraphActionPerformed

    private void ycomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ycomboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ycomboActionPerformed

    private void xcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xcomboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xcomboActionPerformed

    private void CombomonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CombomonthActionPerformed
        try
        {
            if(Combomonth.getSelectedItem().toString().equals("January")) endstr="01";
            else if(Combomonth.getSelectedItem().toString().equals("February")) endstr="02";
            else if(Combomonth.getSelectedItem().toString().equals("March")) endstr="03";
            else if(Combomonth.getSelectedItem().toString().equals("April")) endstr="04";
            else if(Combomonth.getSelectedItem().toString().equals("May")) endstr="05";
            else if(Combomonth.getSelectedItem().toString().equals("June")) endstr="06";
            else if(Combomonth.getSelectedItem().toString().equals("July")) endstr="07";
            else if(Combomonth.getSelectedItem().toString().equals("August")) endstr="08";
            else if(Combomonth.getSelectedItem().toString().equals("September")) endstr="09";
            else if(Combomonth.getSelectedItem().toString().equals("October")) endstr="10";
            else if(Combomonth.getSelectedItem().toString().equals("November")) endstr="11";
            else if(Combomonth.getSelectedItem().toString().equals("December")) endstr="12";
            else endstr="";

        }
        catch(Exception e){}
    }//GEN-LAST:event_CombomonthActionPerformed

    private void BtnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnsaveActionPerformed

        JFileChooser fc=new JFileChooser();
        fc.showSaveDialog(this);
        File f=new File(fc.getSelectedFile().toString()+".xls");

        try
        {
            export(mytable, f);
        }
        catch(Exception e){System.out.println("Exception aayi h "+e.getMessage());}
    }//GEN-LAST:event_BtnsaveActionPerformed

    private void BtnshowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnshowActionPerformed
        if(Combomonth.getSelectedItem().toString().equals("Select"))
        JOptionPane.showMessageDialog(null,"Please select month","Select Error",JOptionPane.ERROR_MESSAGE);
        else
        showdata(Combopname.getSelectedItem().toString(),endstr);
    }//GEN-LAST:event_BtnshowActionPerformed

    private void CombopnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CombopnameActionPerformed

    }//GEN-LAST:event_CombopnameActionPerformed

    private void CombopnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CombopnameItemStateChanged

        xcombo.removeAllItems();
        ycombo.removeAllItems();
        try
        {
            ResultSet rs1=s.executeQuery("Select * from "+Combopname.getSelectedItem().toString());
            ResultSetMetaData rsmd = rs1.getMetaData();
            for(int i=3;i<6;i++)
            {
                xcombo.addItem(rsmd.getColumnName(i));
                ycombo.addItem(rsmd.getColumnName(i));
            }
                xcombo.addItem("Date");
                ycombo.addItem("Date");
            
        }
        catch(SQLException e2){System.out.println("Exception aayi h "+e2.getMessage());}            

    }//GEN-LAST:event_CombopnameItemStateChanged
    
    private void export(JTable table,File file)throws IOException
    {
        TableModel model=table.getModel();
        BufferedWriter bw=new BufferedWriter(new FileWriter(file));
        
        bw.write("\n\t\t\t\t\t\t\t\t DATA  ANALYSIS  REPORT");
        bw.write("\n\n\t\t\t"+Lpname.getText()+"\t"+Combopname.getSelectedItem().toString()+"\t\t\t\t\t\t\t\t\t\t"+Lpmonth.getText()+"\t"+Combomonth.getSelectedItem()+"\n\n\n\t");        
        
        for(int i=0;i<model.getColumnCount();i++)
            bw.write("\t\t"+model.getColumnName(i)+"\t");
        bw.write("\n\n\t");
        
        for(int i=0;i<model.getRowCount();i++)
        {
            for(int j=0;j<model.getColumnCount();j++)
                bw.write("\t\t"+model.getValueAt(i,j)+"\t");
            bw.write("\n\t");
        }
        bw.close();
        JOptionPane.showMessageDialog(null,"Saved successfully","Congratulations",JOptionPane.INFORMATION_MESSAGE);        
    }

    private void showdata(String tablenm,String endstr)       
    {
        try
        {
            ResultSet rs1=s.executeQuery("Select * from "+tablenm);
            ResultSetMetaData rsmd = rs1.getMetaData();
            for(int i=1;i<6;i++)
                model.addColumn(rsmd.getColumnName(i));
            mytable.setModel(model);
            
            DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) mytable.getTableHeader().getDefaultRenderer();
            renderer.setHorizontalAlignment(0);        
            
            ResultSet rs2=s.executeQuery("Select * from "+tablenm+" where date like '%-"+endstr+"-%'");
            mytable.setModel(DbUtils.resultSetToTableModel(rs2));

            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment( JLabel.CENTER );
            for(int i=1;i<6;i++)
                mytable.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );        

        }
        catch(SQLException e2){System.out.println("Exception aayi h "+e2.getMessage());}            
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btngraph;
    private javax.swing.JButton Btnsave;
    private javax.swing.JButton Btnshow;
    private javax.swing.JComboBox<String> Combomonth;
    private javax.swing.JComboBox<String> Combopname;
    private javax.swing.JLabel Lpmonth;
    private javax.swing.JLabel Lpname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mytable;
    private javax.swing.JComboBox<String> xcombo;
    private javax.swing.JComboBox<String> ycombo;
    // End of variables declaration//GEN-END:variables
}
